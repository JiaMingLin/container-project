<!--Sun Jul 12 10:25:14 2015-->
<configuration>
    
<!-- bind address -->

    <property>
      <name>dfs.datanode.address</name>
      <value>0.0.0.0:1019</value>
    </property>

    <property>
      <name>dfs.datanode.http.address</name>
      <value>0.0.0.0:50075</value>
    </property>
    
    <property>
      <name>dfs.datanode.https.address</name>
      <value>0.0.0.0:50475</value>
    </property>
    
    <property>
      <name>dfs.datanode.ipc.address</name>
      <value>0.0.0.0:8010</value>
    </property>

    <property>
      <name>dfs.https.port</name>
      <value>50470</value>
    </property>

    <property>
      <name>dfs.journalnode.http-address</name>
      <value>0.0.0.0:8480</value>
    </property>

    <property>
      <name>dfs.domain.socket.path</name>
      <value>/var/lib/hadoop-hdfs/dn_socket</value>
    </property>

<!-- connection -->
    <property>
      <name>dfs.https.port</name>
      <value>50470</value>
    </property>

    <property>
      <name>dfs.namenode.http-address</name>
      <value>hadoop-namenode:50070</value>
      <final>true</final>
    </property>

    <property>
      <name>dfs.namenode.https-address</name>
      <value>hadoop-namenode:50470</value>
    </property>

    <property>
      <name>dfs.namenode.secondary.http-address</name>
      <value>hadoop-namenode:50090</value>
    </property>

<!-- data dir -->
    <property>
      <name>dfs.namenode.checkpoint.dir</name>
      <value>/hadoop/hdfs/namesecondary</value>
    </property>

    <property>
      <name>dfs.namenode.checkpoint.edits.dir</name>
      <value>${dfs.namenode.checkpoint.dir}</value>
    </property>

    <property>
      <name>dfs.journalnode.edits.dir</name>
      <value>/hadoop/hdfs/journalnode</value>
    </property>

    <property>
      <name>dfs.datanode.data.dir</name>
      <value>/hadoop/hdfs/data</value>
    </property>

    <property>
      <name>dfs.journalnode.edits.dir</name>
      <value>/hadoop/hdfs/journal</value>
    </property>

    <property>
      <name>dfs.datanode.data.dir.perm</name>
      <value>750</value>
    </property>

    <property>
      <name>dfs.datanode.du.reserved</name>
      <value>1073741824</value>
    </property>

    <property>
      <name>dfs.datanode.failed.volumes.tolerated</name>
      <value>0</value>
    </property>

    <property>
      <name>dfs.namenode.name.dir</name>
      <value>/hadoop/hdfs/namenode</value>
    </property>

    <property>
      <name>dfs.namenode.name.dir.restore</name>
      <value>true</value>
    </property>

<!-- health check -->

    <property>
      <name>dfs.namenode.stale.datanode.interval</name>
      <value>30000</value>
    </property>

    <property>
      <name>dfs.namenode.startup.delay.block.deletion.sec</name>
      <value>3600</value>
    </property>

    <property>
      <name>dfs.namenode.safemode.threshold-pct</name>
      <value>1.0f</value>
    </property>

    <property>
      <name>dfs.namenode.checkpoint.period</name>
      <value>21600</value>
    </property>
    
    <property>
      <name>dfs.namenode.checkpoint.txns</name>
      <value>1000000</value>
    </property>
    
    <property>
      <name>dfs.namenode.handler.count</name>
      <value>40</value>
    </property>

    <property>
      <name>dfs.blockreport.initialDelay</name>
      <value>120</value>
    </property>

    <property>
      <name>dfs.heartbeat.interval</name>
      <value>3</value>
    </property>

<!-- block config tunning -->
    <property>
      <name>dfs.block.access.token.enable</name>
      <value>true</value>
    </property>

    <property>
      <name>dfs.blocksize</name>
      <value>134217728</value>
    </property>

<!-- access config -->

    <property>
      <name>dfs.namenode.write.stale.datanode.ratio</name>
      <value>1.0f</value>
    </property>
    
    <property>
      <name>dfs.permissions.enabled</name>
      <value>true</value>
    </property>
    
    <property>
      <name>dfs.permissions.superusergroup</name>
      <value>hdfs</value>
    </property>
    
    <property>
      <name>dfs.replication</name>
      <value>3</value>
    </property>
    
    <property>
      <name>dfs.replication.max</name>
      <value>50</value>
    </property>

    <property>
      <name>dfs.namenode.accesstime.precision</name>
      <value>0</value>
    </property>
    
    <property>
      <name>dfs.namenode.avoid.read.stale.datanode</name>
      <value>true</value>
    </property>
    
    <property>
      <name>dfs.namenode.avoid.write.stale.datanode</name>
      <value>true</value>
    </property>

    <property>
      <name>dfs.client.read.shortcircuit</name>
      <value>true</value>
    </property>

    <property>
      <name>dfs.client.read.shortcircuit.streams.cache.size</name>
      <value>4096</value>
    </property>

    <property>
      <name>dfs.cluster.administrators</name>
      <value>hdfs</value>
    </property>

    <property>
      <name>dfs.datanode.balance.bandwidthPerSec</name>
      <value>6250000</value>
    </property>

    <property>
      <name>dfs.datanode.max.transfer.threads</name>
      <value>16384</value>
    </property>

    <property>
      <name>dfs.http.policy</name>
      <value>HTTP_ONLY</value>
    </property>

<!-- security -->
    <property>
      <name>dfs.datanode.kerberos.principal</name>
      <value>dn/_HOST@EXAMPLE.COM</value>
    </property>
    
    <property>
      <name>dfs.datanode.keytab.file</name>
      <value>/etc/security/keytabs/dn.service.keytab</value>
    </property>

    <property>
      <name>dfs.hosts.exclude</name>
      <value>/etc/hadoop/dfs.exclude</value>
    </property>

    <property>
      <name>dfs.journalnode.kerberos.internal.spnego.principal</name>
      <value>HTTP/_HOST@EXAMPLE.COM</value>
    </property>

    <property>
      <name>dfs.journalnode.kerberos.principal</name>
      <value>jn/_HOST@EXAMPLE.COM</value>
    </property>
    
    <property>
      <name>dfs.journalnode.keytab.file</name>
      <value>/etc/security/keytabs/jn.service.keytab</value>
    </property>

    <property>
      <name>dfs.namenode.kerberos.internal.spnego.principal</name>
      <value>${dfs.web.authentication.kerberos.principal}</value>
    </property>

    <property>
      <name>dfs.namenode.kerberos.principal</name>
      <value>nn/_HOST@EXAMPLE.COM</value>
    </property>

    <property>
      <name>dfs.namenode.keytab.file</name>
      <value>/etc/security/keytabs/nn.service.keytab</value>
    </property>

    <property>
      <name>dfs.secondary.namenode.kerberos.internal.spnego.principal</name>
      <value>${dfs.web.authentication.kerberos.principal}</value>
    </property>
    
    <property>
      <name>dfs.secondary.namenode.kerberos.principal</name>
      <value>nn/_HOST@EXAMPLE.COM</value>
    </property>
    
    <property>
      <name>dfs.secondary.namenode.keytab.file</name>
      <value>/etc/security/keytabs/nn.service.keytab</value>
    </property>

    <property>
      <name>dfs.support.append</name>
      <value>true</value>
      <final>true</final>
    </property>

    <property>
      <name>dfs.web.authentication.kerberos.keytab</name>
      <value>/etc/security/keytabs/spnego.service.keytab</value>
    </property>
    
    <property>
      <name>dfs.web.authentication.kerberos.principal</name>
      <value>HTTP/_HOST@EXAMPLE.COM</value>
    </property>
    
    <property>
      <name>dfs.webhdfs.enabled</name>
      <value>true</value>
    </property>
    
    <property>
      <name>fs.permissions.umask-mode</name>
      <value>022</value>
    </property>

<!-- The containers are easily to restart or migrate due to docker daemon restart and thus ip changes oftenly.
So it isn't appropreate to write a hostname-ip pair in /etc/hosts in datanode. Fortunatly, there is a dns service provided by Kubernetes.
However, the resolved ip is just a virtual ip created by Kubernetes in iptables and different with container ip.
The ip-hostname-check would failed since the resolved ip(virtual ip) is inconsisted with container ip, and thus the HDFS would start fail. Add this properties to disable the check.
-->
    <property>
      <name>dfs.namenode.datanode.registration.ip-hostname-check</name>
      <value>false</value>
    </property>

</configuration>
